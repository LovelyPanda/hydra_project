This documents describes format of metadata generated by preprocessor for terrain. 
Those metadata together with binary data of chunks may
be used to construct and render landscape in real time.

The main idea of preprocessing is to do all the difficult work once and to use
generated data when needed. So all the data must be easy to retrieave and it
must stored compact.

Metadata is relatively small (by size) part of data generated by preprocessor.
Its main function is to store all the high-level descriptions of data so that we
would be able not to load binary data (which is heavy) to get its descriptions.
Metadata also contains links (probably filenames) to binary data.
User reads main metadata file and builds core of data structure to store
landscape data. After that he has links to stream real data once needed.

                         MAIN TERRAIN METADATA
This file contains description of whole terrain. It contains some global
descriptions, but also enumerates all the terrain fragments (links to their
metadata).
Metadata is stored in xml file.

<?xml version="1.0"?>
<landscape>
    <description name="SomeLandscape" fragment_num="100">
        <size x="2048" y="2048"/>
    </description>

    <terrain_fragment>
        <meta filename="0_0.tfmeta"/>
    </terrain_fragment>

    <!-- ... -->

</landscape>

                       TERRAIN FRAGMENT METADATA
This file describes square fragment of terrain. It describes its main 
characteristics like size, number of index and vertex LODs, but also enumerates all the chunks 
for different levels of details.
Metadata is stored in xml file of next format:
Main (root) node is named "terrain_fragment" it contains all the data about
fragment of terrain surface. Metadata must have only 1 such node.
It contains description block and levels of details.
Description block is named "description" and contains attributes:
    - "size" (size of square fragment in some user defined metrics)
    - "index_lods" (contains number of index levels of details, must be at least 1)
    - "vertex_lods" (contains number of vertex levels of details, must be at least 1)
    - "position" (position of fragment's corner in world coordinates)


<?xml version="1.0"?>
<terrain_fragment>
    <!-- descriptions -->
    <description>
        <size size="257"/>
        <index_lods number="3"/>
        <vertex_lods number="3"/>
        <position x="0.0" y="0.0"/> 
    </description>

    <!-- index LODs -->
    <quad index_level="0" vertex_level="0" pos="NONE" max_error="1.0" indices_num="2000">
        <data filename="level1.bin" />

        <!-- axis aligned bounding box -->
        <aabb>
            <corner x="0.0" y="0.0" z="0.0">
            <vector x="257.0" y="30.0" z="257.0">
        </aabb>

        <!-- sublevels -->
        <quad index_level="1" vertex_level="0" pos="NW">
            <data filename="level2_nw.bin" />
            <aabb>
                <corner x="0.0" y="0.0" z="0.0">
                <vector x="257.0" y="30.0" z="257.0">
            </aabb>

            <!-- sublevels -->
            <!-- ... -->

        </quad>
        <quad index_level="1" vertex_level="0" pos="NE">
        </quad>
         
        <!-- ... -->

    </quad>

    <!-- vertex LODs -->
    <vertex_lod level="0" vertex_number="1000">
        <data filename="v_level1.bin" />
    </vertex_lod>
    <vertex_lod level="1" vertex_number="3000">
        <data filename="v_level2.bin" />
    </vertex_lod>
    <vertex_lod level="2" vertex_number="100500">
        <data filename="v_level3.bin" />
    </vertex_lod>

</terrain_fragment>
